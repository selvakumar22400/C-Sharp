 What is Common Language Runtime (CLR)?
      CLR handles program execution for various languages including C#. 
      The architecture of CLR handles memory management, garbage collection, security handling
      
What is garbage collection in C#?
      Garbage collection is the process of freeing up memory that is captured by unwanted objects.
      When you create a class object, automatically some memory space is allocated to the object in the heap memory.
      Now, after you perform all the actions on the object, the memory space occupied by the object becomes waste. 
      It is necessary to free up memory  
 
 What are indexers in C# .NET?   https://www.geeksforgeeks.org/c-sharp-indexers/
      Indexers are known as smart arrays in C#. 
      It allows the instances of a class to be indexed in the same way as an array.
      
      [access_modifier] [return_type] this [argument_list]
      {
        get 
        {
           // get block code
        }
        set 
        {
          // set block code
        }

      }
      //it is simlier to the propertiy
      
What are the types of classes in C#?
    Abstract class
    Partial class
    Sealed class
    Static class      
    
What is the difference between C# abstract class and an interface?
   absract    It contains both declaration and definition parts.
              A class can only use one abstract class.
              The performance of an abstract class is fast.

   interface  It contains only a declaration part.
              A class can use multiple interfaces.
              The performance of the interface is slow
              
What are extension methods in C#?  https://www.geeksforgeeks.org/extension-method-in-c-sharp/
   In C#, the extension method concept allows you to add new methods in the existing class  
   
    // Method 5
    public static void M5(this Geek g, string str)
    {
        Console.WriteLine(str);
    }
    
What is inheritance? Does C# support multiple inheritance?
   c# inheritance allows using the perent class features in child class
    
    But C# does not support multiple class inheritance.
    To overcome this problem we use interfaces to achieve multiple class inheritance.

 What is a managed and unmanaged code?
    Managed code lets you run the code on a managed CLR runtime environment in the .NET framework. 
    Managed code runs on the managed runtime environment than the operating system itself. 
    Benefits: Provides various services like a garbage collector, exception handling, etc. 

    Unmanaged code is when the code doesn’t run on CLR, it is an unmanaged code that works outside the .NET framework. 
    They don’t provide services of the high-level languages and therefore, run without them. Such an example is C++
  
what is enum ?
    An enum is a special "class" that represents a group of constants (unchangeable/read-only variables).
    To create an enum, use the enum keyword (instead of class or interface), and separate the enum items with a comma:  
    You can access enum items with the dot syntax
    enum Level 
    {
      Low,
      Medium,
      High
    }
    Level myVar = Level.Medium;
    Console.WriteLine(myVar);
    
Ref and Out?
 The ref is a keyword in C# which is used for the passing the arguments by a reference. 
 It is generally used when a method returns multiple values.
 
 Boxing In C# and Unboxing In C#

    The process of Converting a Value Type (char, int, etc.) to a Reference Type(object) is called Boxing.
    Boxing is an implicit conversion process in which object type (supertype) is used.
    The Value type is always stored in Stack. The Referenced Type is stored in Heap.

    The process of converting the reference type into the value type is known as Unboxing.
    It is an explicit conversion process.

What are Properties in C#?
   Properties are the special type of class members
   that provides to read, write, or compute the value of a private field
   Encapsulation and hiding of information can also be achieved using properties.
   It uses pre-defined methods which are “get” and “set” methods which help to access and modify the properties.

What are partial classes in C#?
    A partial class is created by using a partial keyword.

What is the difference between late binding and early binding in C#?
   In this binding, the compiler already knows about what kind of object it is and what are the methods or properties it holds,
   here the objects are static objects.
   The performance of early binding is fast and it is easy to code.
   It decreases the number of run-time errors.
   
   in late binding, the compiler does not know about what kind of object it is and what are the methods or properties it holds,
   here the objects are dynamic objects
   Basically, late binding is achieved by using virtual methods.
   The performance of late binding is slower than early binding because it requires lookups at run-time
